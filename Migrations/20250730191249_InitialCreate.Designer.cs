// <auto-generated />
using System;
using FutMatchApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FutMatchApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250730191249_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FutMatchApp.Models.Court", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativa")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PrecoPorHora")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Courts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativa = true,
                            Descricao = "Quadra principal com grama sintética",
                            Localizacao = "Centro Esportivo - Quadra 1",
                            Nome = "Quadra Central",
                            PrecoPorHora = 80.00m
                        },
                        new
                        {
                            Id = 2,
                            Ativa = true,
                            Descricao = "Quadra com piso de concreto",
                            Localizacao = "Centro Esportivo - Quadra 2",
                            Nome = "Quadra Norte",
                            PrecoPorHora = 60.00m
                        },
                        new
                        {
                            Id = 3,
                            Ativa = true,
                            Descricao = "Quadra coberta",
                            Localizacao = "Centro Esportivo - Quadra 3",
                            Nome = "Quadra Sul",
                            PrecoPorHora = 100.00m
                        });
                });

            modelBuilder.Entity("FutMatchApp.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourtId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("DuracaoHoras")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OpponentTeamId")
                        .HasColumnType("int");

                    b.Property<int?>("OpponentUserId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourtId");

                    b.HasIndex("OpponentTeamId");

                    b.HasIndex("OpponentUserId");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("FutMatchApp.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("FutMatchApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SelectedTeamId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("SelectedTeamId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FutMatchApp.Models.Reservation", b =>
                {
                    b.HasOne("FutMatchApp.Models.Court", "Court")
                        .WithMany("Reservations")
                        .HasForeignKey("CourtId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FutMatchApp.Models.Team", "OpponentTeam")
                        .WithMany()
                        .HasForeignKey("OpponentTeamId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("FutMatchApp.Models.User", "OpponentUser")
                        .WithMany()
                        .HasForeignKey("OpponentUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("FutMatchApp.Models.Team", "Team")
                        .WithMany("Reservations")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FutMatchApp.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Court");

                    b.Navigation("OpponentTeam");

                    b.Navigation("OpponentUser");

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FutMatchApp.Models.Team", b =>
                {
                    b.HasOne("FutMatchApp.Models.User", "User")
                        .WithMany("Teams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FutMatchApp.Models.User", b =>
                {
                    b.HasOne("FutMatchApp.Models.Team", "SelectedTeam")
                        .WithMany()
                        .HasForeignKey("SelectedTeamId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("SelectedTeam");
                });

            modelBuilder.Entity("FutMatchApp.Models.Court", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("FutMatchApp.Models.Team", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("FutMatchApp.Models.User", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
